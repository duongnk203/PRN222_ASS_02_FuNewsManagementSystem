@page
@model FUNewsManagementSystem.Pages_SystemAccounts.IndexModel
@inject FUNewsManagementSystem.Service.RoleService RoleService

@{
    ViewData["Title"] = "System Accounts";
    Layout = "~/Pages/Shared/_LayoutAdmin.cshtml";
}

<div class="container mt-4">
    <h1 class="text-primary">System Accounts</h1>

    <!-- Search Form -->
    <form method="get" class="mb-3 d-flex">
        <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control me-2" placeholder="Search by name or email..." />
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-search"></i> Search
        </button>
        <a asp-page="Index" class="btn btn-secondary ms-2">Clear</a>
    </form>

    <p>
        <a asp-page="Create" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Create New Account
        </a>
    </p>

    <div class="table-responsive">
        <table class="table table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.SystemAccount[0].AccountName)</th>
                    <th>@Html.DisplayNameFor(model => model.SystemAccount[0].AccountEmail)</th>
                    <th>@Html.DisplayNameFor(model => model.SystemAccount[0].AccountRole)</th>
                    <th>@Html.DisplayNameFor(model => model.SystemAccount[0].IsActive)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.SystemAccount)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.AccountName)</td>
                        <td>@Html.DisplayFor(modelItem => item.AccountEmail)</td>
                        <td>
                            <span class="badge bg-@(item.AccountRole == 3 ? "danger" : item.AccountRole == 1 ? "info" : "secondary")">
                                @RoleService.GetRoleName(item.AccountRole)
                            </span>
                        </td>
                        <td>
                            <span class="badge @(item.IsActive ? "bg-success" : "bg-danger")">
                                @(item.IsActive ? "Active" : "Inactive")
                            </span>
                        </td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.AccountId" class="btn btn-warning btn-sm">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <a asp-page="./Details" asp-route-id="@item.AccountId" class="btn btn-info btn-sm">
                                <i class="bi bi-eye"></i> Details
                            </a>
                            <a asp-page="./Delete" asp-route-id="@item.AccountId" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this account?')">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (!Model.SystemAccount.Any())
    {
        <div class="alert alert-warning text-center">
            <i class="bi bi-exclamation-circle"></i> No accounts found!
        </div>
    }
</div>
